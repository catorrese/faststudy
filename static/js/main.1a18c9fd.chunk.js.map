{"version":3,"sources":["components/Login.jsx","components/Profile.jsx","components/MyNotes.jsx","components/SearchNotes.jsx","components/images/logo.png","components/Dashboard.jsx","components/Routing.jsx","App.js","index.js"],"names":["Login","userInfo","triggerSessionValidation","useState","login","setLogin","email","password","confirm","university","name","data","setData","handleAttributeChange","value","previous","newObject","Box","sx","backgroundColor","minHeight","p","xs","sm","md","minWidth","maxWidth","borderRadius","justifyContent","m","Typography","color","mt","fontSize","fontFamily","TextField","type","fullWidth","variant","margin","label","autoComplete","required","onChange","event","target","Button","width","height","bgcolor","onClick","dbRef","ref","getDatabase","get","child","replaceAll","then","snapshot","exists","response","val","window","localStorage","setItem","JSON","stringify","console","log","catch","error","ingresar","id","db","updates","postData","update","err","signUp","Grid","container","item","textAlign","Profile","isMobile","useMediaQuery","query","Paper","padding","display","flexDirection","mb","MyNotes","refresh","setRefresh","myNotes","setMyNotes","noteEditor","setNoteEditor","course","career","newNote","setNewNote","pdf","setPdf","useEffect","getNotes","Object","values","length","map","note","index","heigth","ml","Card","background","border","CardContent","noWrap","paths","storage","getStorage","windowReference","open","getDownloadURL","refStorage","url","location","openNotes","path","component","hidden","accept","multiple","files","Stack","direction","forEach","newPostKey","push","key","storageRef","uploadBytes","uploadNote","SearchNotes","notes","setNotes","Dashboard","mobileOpen","setMobileOpen","selection","setSelection","handleDrawerToggle","handleMenuItemSelected","itemIndex","style","CssBaseline","AppBar","position","zIndex","theme","drawer","paddingTop","Toolbar","IconButton","edge","mr","src","logo","alt","Drawer","onClose","ModalProps","keepMounted","boxSizing","flexShrink","List","paddingBottom","ListItem","button","selected","ListItemIcon","Person","ListItemText","primary","Search","Folder","Logout","selectDashboardTab","Routing","Fragment","exact","render","to","App","props","setUserInfo","authEvent","setAuthEvent","getUserInfo","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","user","parse","getItem","className","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1a18c9fd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Stack,\r\n  Button,\r\n  Grid,\r\n  InputAdornment,\r\n} from \"@mui/material\";\r\nimport { AccountCircle, Key } from \"@mui/icons-material\";\r\nimport { getDatabase, ref, child, get, update } from \"firebase/database\";\r\n\r\nconst Login = ({ userInfo, triggerSessionValidation }) => {\r\n  const [login, setLogin] = useState(true);\r\n  const [data, setData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm: \"\",\r\n    university: \"\",\r\n    name: \"\",\r\n  });\r\n\r\n  const handleAttributeChange = (name, value) => {\r\n    setData((previous) => {\r\n      const newObject = { ...previous };\r\n      newObject[name] = value;\r\n      return newObject;\r\n    });\r\n  };\r\n\r\n  const signUp = () => {\r\n    if (data[\"email\"] !== \"\" && data[\"password\"] !== \"\" && data[\"name\"] !== \"\" && data[\"confirm\"] !== \"\" && data[\"university\"] !== \"\" && data[\"password\"] === data['confirm']){\r\n      const db = getDatabase();\r\n      const updates = {};\r\n        let postData = data;\r\n        updates[\"/users/\" + postData['email'].replaceAll('.', '-')] = postData;\r\n        update(ref(db), updates)\r\n        .then(() => {\r\n          setLogin(true)\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }\r\n\r\n  const ingresar = () => {\r\n    if (data[\"email\"] !== \"\" && data[\"password\"] !== \"\") {\r\n      const dbRef = ref(getDatabase());\r\n      get(child(dbRef, `users/${data['email'].replaceAll('.', '-')}`))\r\n        .then((snapshot) => {\r\n          if (snapshot.exists()) {\r\n            const response = snapshot.val()\r\n            if(response.password === data['password']){\r\n              window.localStorage.setItem(\r\n                \"user-info\",\r\n                JSON.stringify(response)\r\n              );\r\n              triggerSessionValidation();\r\n            }else {\r\n              console.log('Wrong password!')\r\n            }\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n      \r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"white\",\r\n        minHeight: \"auto\",\r\n        p: { xs: \"1em\", sm: \"2em\", md: \"1em 4em\" },\r\n        minWidth: { xs: \"300px\", sm: \"500px\", md: \"700px\" },\r\n        maxWidth: \"900px\",\r\n        borderRadius: \"15px\",\r\n        justifyContent: \"center\",\r\n        m: \"0 1em\",\r\n      }}\r\n    >\r\n      <Typography\r\n        sx={{\r\n          color: \"#E14D2A\",\r\n          mt: login ? \"1em\" : 0,\r\n          fontSize: { xs: 25, md: 35 },\r\n          fontFamily: \"Montserrat Bold\",\r\n        }}\r\n      >\r\n        User {login ? \"Login\" : \"Sign Up\"}\r\n      </Typography>\r\n      {!login && (\r\n        <>\r\n          <TextField\r\n            type=\"text\"\r\n            sx={{\r\n              m: \"2em 0 0em 0\",\r\n              backgroundColor: \"lightgray\",\r\n              color: \"white\",\r\n            }}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            autoComplete=\"name\"\r\n            value={data.name}\r\n            required\r\n            onChange={(event) =>\r\n              handleAttributeChange(event.target.name, event.target.value)\r\n            }\r\n          />\r\n          <TextField\r\n            type=\"text\"\r\n            sx={{\r\n              m: \"1em 0 0em 0\",\r\n              backgroundColor: \"lightgray\",\r\n              color: \"white\",\r\n            }}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            label=\"University\"\r\n            name=\"university\"\r\n            autoComplete=\"university\"\r\n            value={data.university}\r\n            required\r\n            onChange={(event) =>\r\n              handleAttributeChange(event.target.name, event.target.value)\r\n            }\r\n          />\r\n        </>\r\n      )}\r\n      <TextField\r\n        sx={{\r\n          m: login ? \"2em 0 1em 0\" : \"1em 0 1em 0\",\r\n          backgroundColor: \"lightgray\",\r\n          color: \"white\",\r\n        }}\r\n        fullWidth\r\n        type=\"email\"\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        label=\"Email\"\r\n        name=\"email\"\r\n        autoComplete=\"email\"\r\n        required\r\n        value={data.email}\r\n        onChange={(event) =>\r\n          handleAttributeChange(event.target.name, event.target.value)\r\n        }\r\n       \r\n      />\r\n      <TextField\r\n        type=\"password\"\r\n        sx={{ m: \"0\", backgroundColor: \"lightgray\", color: \"white\" }}\r\n        fullWidth\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        label=\"Password\"\r\n        name=\"password\"\r\n        autoComplete=\"password\"\r\n        value={data.password}\r\n        required\r\n        onChange={(event) =>\r\n          handleAttributeChange(event.target.name, event.target.value)\r\n        }\r\n       \r\n      />\r\n      {!login && (\r\n        <>\r\n          <TextField\r\n            type=\"password\"\r\n            sx={{\r\n              m: \"1em 0 0em 0\",\r\n              backgroundColor: \"lightgray\",\r\n              color: \"white\",\r\n            }}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            label=\"Confirm Password\"\r\n            name=\"confirm\"\r\n            autoComplete=\"confirm\"\r\n            value={data.confirm}\r\n            required\r\n            onChange={(event) =>\r\n              handleAttributeChange(event.target.name, event.target.value)\r\n            }\r\n          />\r\n        </>\r\n      )}\r\n      {login ? (\r\n        <Button\r\n          variant=\"contained\"\r\n          sx={{\r\n            margin: \"1.3em 0 0 0\",\r\n            fontSize: 15,\r\n            width: \"100%\",\r\n            height: 40,\r\n            borderRadius: 22,\r\n            fontFamily: \"Montserrat Bold\",\r\n            bgcolor: \"#E14D2A\",\r\n          }}\r\n          onClick={() => {\r\n            ingresar();\r\n          }}\r\n          id=\"logInButton\"\r\n        >\r\n          Login\r\n        </Button>\r\n      ) : (\r\n        <Button\r\n          variant=\"contained\"\r\n          sx={{\r\n            margin: \"1.3em 0 0 0\",\r\n            fontSize: 15,\r\n            width: \"100%\",\r\n            height: 40,\r\n            borderRadius: 22,\r\n            fontFamily: \"Montserrat Bold\",\r\n            bgcolor: \"#E14D2A\",\r\n          }}\r\n          onClick={() => {\r\n            signUp();\r\n          }}\r\n          id=\"logInButton\"\r\n        >\r\n          Sign Up\r\n        </Button>\r\n      )}\r\n      <Grid container sx={{ m: login ? \"1em 0\" : \"1em 0 0 0 \" }}>\r\n        <Grid item xs={12} md={6}>\r\n          <Button\r\n            fullWidth\r\n            color=\"primary\"\r\n            sx={{\r\n              textAlign: \"right\",\r\n              fontSize: { xs: 11, md: 14 },\r\n              fontFamily: \"Montserrat Light\",\r\n              color: \"#E14D2A\",\r\n            }}\r\n            //onClick={() => setAuthState('FORGOT_PASSWORD')}\r\n            id=\"forgotPasswordButton\"\r\n          >\r\n            <strong>Forgot Password?</strong>\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          {login ? (\r\n            <Button\r\n              fullWidth\r\n              sx={{\r\n                textAlign: \"right\",\r\n                fontSize: { xs: 11, md: 14 },\r\n                fontFamily: \"Montserrat Light\",\r\n                color: \"#E14D2A\",\r\n              }}\r\n              onClick={() => setLogin(!login)}\r\n              id=\"forgotPasswordButton\"\r\n            >\r\n              <strong>Create Account</strong>\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              fullWidth\r\n              sx={{\r\n                textAlign: \"right\",\r\n                fontSize: { xs: 11, md: 14 },\r\n                fontFamily: \"Montserrat Light\",\r\n                color: \"#E14D2A\",\r\n              }}\r\n              onClick={() => setLogin(!login)}\r\n              id=\"forgotPasswordButton\"\r\n            >\r\n              <strong>Login</strong>\r\n            </Button>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Paper, Typography } from \"@mui/material\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nconst Profile = ({ userInfo }) => {\r\n  const isMobile = useMediaQuery({ query: \"(max-width: 900px)\" });\r\n\r\n  return (\r\n    \r\n      <Paper\r\n        sx={{\r\n          width: \"100%\",\r\n          padding: isMobile ? \"1em\" : \"2em 1em\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n\r\n          borderRadius: '15px',\r\n        }}\r\n      >\r\n        <Typography variant={isMobile? \"h5\" : \"h4\"} sx={{fontFamily: \"Montserrat Bold\", mb: '1em'}}>Profile</Typography>\r\n        <Grid container sx={{ }}>\r\n          <Grid item xs={12} sx={{mb: '0.5em'}} >\r\n            <Typography variant={isMobile? \"h7\":\"h6\"} sx={{fontFamily: \"Montserrat Light\",}}>Name: {userInfo.name}</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sx={{mb: '0.5em'}}>\r\n            <Typography variant={isMobile? \"h7\":\"h6\"} sx={{fontFamily: \"Montserrat Light\",}}>Email: {userInfo.email}</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sx={{mb: '0.5em'}}>\r\n            <Typography variant={isMobile? \"h7\":\"h6\"} sx={{fontFamily: \"Montserrat Light\",}}>University: {userInfo.university}</Typography>\r\n          </Grid>\r\n         \r\n        </Grid>\r\n      </Paper>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { getDatabase, ref, child, push, update, get } from \"firebase/database\";\r\nimport { Stack } from \"@mui/system\";\r\nimport {\r\n  getDownloadURL,\r\n  getStorage,\r\n  ref as refStorage,\r\n  uploadBytes,\r\n} from \"firebase/storage\";\r\n\r\nconst MyNotes = ({ userInfo }) => {\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [myNotes, setMyNotes] = useState([]);\r\n  const [noteEditor, setNoteEditor] = useState(false);\r\n  const [newNote, setNewNote] = useState({\r\n    name: \"\",\r\n    course: \"\",\r\n    university: \"\",\r\n    career: \"\",\r\n  });\r\n  const [path, setPath] = useState(\"\");\r\n  const [pdf, setPdf] = useState(null);\r\n\r\n  const handleAttributeChange = (name, value) => {\r\n    setNewNote((previous) => {\r\n      const newObject = { ...previous };\r\n      newObject[name] = value;\r\n      return newObject;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getNotes = async () => {\r\n      const dbRef = ref(getDatabase());\r\n      get(child(dbRef, `user-posts/${userInfo[\"email\"].replaceAll(\".\", \"-\")}`))\r\n        .then((snapshot) => {\r\n          if (snapshot.exists()) {\r\n            const response = snapshot.val();\r\n            console.log(Object.values(response));\r\n            setMyNotes(Object.values(response));\r\n          } else {\r\n            console.log(\"No data available\");\r\n            setMyNotes([]);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    };\r\n\r\n    userInfo && getNotes();\r\n  }, [refresh, userInfo]);\r\n\r\n  const uploadNote = () => {\r\n    let error = false;\r\n    Object.values(newNote).forEach((value) => {\r\n      if (value === \"\" || value === null) {\r\n        error = true;\r\n      }\r\n    });\r\n    if (!error && pdf != null) {\r\n      const db = getDatabase();\r\n      const newPostKey = push(child(ref(db), \"notes\")).key;\r\n      const storage = getStorage();\r\n      const storageRef = refStorage(storage, \"notes/\" + newPostKey);\r\n      uploadBytes(storageRef, pdf).then((snapshot) => {\r\n        console.log(\"Uploaded file!\");\r\n\r\n        const updates = {};\r\n        let postData = newNote;\r\n        postData[\"path\"] = newPostKey;\r\n        updates[\"/notes/\" + newPostKey] = postData;\r\n        updates[\r\n          \"/user-posts/\" +\r\n            userInfo[\"email\"].replaceAll(\".\", \"-\") +\r\n            \"/\" +\r\n            newPostKey\r\n        ] = postData;\r\n\r\n        update(ref(db), updates)\r\n          .then(() => {\r\n            setNoteEditor(false);\r\n            setRefresh(!refresh);\r\n          })\r\n          .catch((err) => console.log(err));\r\n      });\r\n    }\r\n  };\r\n\r\n  const openNotes = (paths) => {\r\n    const storage = getStorage();\r\n    var windowReference = window.open();\r\n\r\n    getDownloadURL(refStorage(storage, \"notes/\" + paths))\r\n      .then((url) => {\r\n        // `url` is the download URL for 'images/stars.jpg'\r\n\r\n        windowReference.location = url;\r\n      })\r\n      .catch((error) => {\r\n        // Handle any errors\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const isMobile = useMediaQuery({ query: \"(max-width: 900px)\" });\r\n\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        width: \"100%\",\r\n        padding: isMobile ? \"1em\" : \"2em 1em\",\r\n        borderRadius: \"15px\",\r\n        mt: \"5.5em\",\r\n      }}\r\n    >\r\n      <Typography\r\n        variant={isMobile ? \"h5\" : \"h4\"}\r\n        sx={{ fontFamily: \"Montserrat Bold\", mb: \"1em\" }}\r\n      >\r\n        {!noteEditor ? \"My Notes\" : \"Create Notes\"}\r\n      </Typography>\r\n      {!noteEditor && myNotes.length === 0 && (\r\n        <Typography\r\n          variant={isMobile ? \"h6\" : \"h5\"}\r\n          sx={{ fontFamily: \"Montserrat Bold\", mb: \"1em\" }}\r\n        >\r\n          You don't have any notes uploaded.\r\n        </Typography>\r\n      )}\r\n      {!noteEditor && (\r\n        <>\r\n          <Button\r\n            variant=\"contained\"\r\n            fullWidth\r\n            sx={{ backgroundColor: \"#E14D2A\" }}\r\n            onClick={() => {\r\n              setNoteEditor(true);\r\n            }}\r\n          >\r\n            Create Notes\r\n          </Button>\r\n          <Grid container width=\"100%\" justifyContent=\"center\">\r\n            {myNotes.map((note, index) => {\r\n              return (\r\n                <Grid\r\n                  key={index}\r\n                  item\r\n                  xs={12}\r\n                  sm={6}\r\n                  md={4}\r\n                  sx={{\r\n                    minWidth: \"300px\",\r\n                    heigth: \"235px\",\r\n                    ml: !isMobile ? \" 0.5em\" : 0,\r\n                  }}\r\n                >\r\n                  <Card\r\n                    sx={{\r\n                      margin: \"1em\",\r\n                      borderRadius: \"1em\",\r\n                      background: \"white\",\r\n                      border: \"solid #E14D2A\",\r\n                      minWidth: \"300px\",\r\n                      minHeight: \"235px\",\r\n                      p: \"0 0.5em\",\r\n                    }}\r\n                  >\r\n                    <CardContent>\r\n                      <Typography noWrap variant=\"h7\" sx={{ mb: \"0.5em\" }}>\r\n                        <strong>{note.name}</strong>\r\n                      </Typography>\r\n                      <Typography>University: {note.university}</Typography>\r\n                      <Typography>Career: {note.career}</Typography>\r\n                      <Typography>Course: {note.course}</Typography>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        sx={{ backgroundColor: \"#E14D2A\", m: \"1.3em 0 0 0\" }}\r\n                        onClick={() => {\r\n                          openNotes(note.path);\r\n                        }}\r\n                      >\r\n                        View Notes\r\n                      </Button>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </>\r\n      )}\r\n      {noteEditor && (\r\n        <>\r\n          <TextField\r\n            sx={{\r\n              m: \"0 0 0.5em 0\",\r\n              backgroundColor: \"lightgray\",\r\n              color: \"white\",\r\n            }}\r\n            fullWidth\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            autoComplete=\"name\"\r\n            required\r\n            value={newNote.name}\r\n            onChange={(event) =>\r\n              handleAttributeChange(event.target.name, event.target.value)\r\n            }\r\n          />\r\n          <TextField\r\n            sx={{\r\n              m: \"0.5em 0 0.5em 0\",\r\n              backgroundColor: \"lightgray\",\r\n              color: \"white\",\r\n            }}\r\n            fullWidth\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            label=\"University\"\r\n            name=\"university\"\r\n            autoComplete=\"university\"\r\n            required\r\n            value={newNote.university}\r\n            onChange={(event) =>\r\n              handleAttributeChange(event.target.name, event.target.value)\r\n            }\r\n          />\r\n          <TextField\r\n            sx={{\r\n              m: \"0.5em 0 0.5em 0\",\r\n              backgroundColor: \"lightgray\",\r\n              color: \"white\",\r\n            }}\r\n            fullWidth\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            label=\"Career\"\r\n            name=\"career\"\r\n            autoComplete=\"career\"\r\n            required\r\n            value={newNote.career}\r\n            onChange={(event) =>\r\n              handleAttributeChange(event.target.name, event.target.value)\r\n            }\r\n          />\r\n          <TextField\r\n            sx={{\r\n              m: \"0.5em 0 1em 0\",\r\n              backgroundColor: \"lightgray\",\r\n              color: \"white\",\r\n            }}\r\n            fullWidth\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            label=\"Course\"\r\n            name=\"course\"\r\n            autoComplete=\"course\"\r\n            required\r\n            value={newNote.course}\r\n            onChange={(event) =>\r\n              handleAttributeChange(event.target.name, event.target.value)\r\n            }\r\n          />\r\n          {pdf === null ? (\r\n            <Button\r\n              fullWidth\r\n              component=\"label\"\r\n              sx={{ color: \"#E14D2A\", border: \"solid #E14D2A\", mb: \"1em\" }}\r\n            >\r\n              Upload file\r\n              <input\r\n                hidden\r\n                accept=\"application/pdf\"\r\n                type=\"file\"\r\n                multiple={false}\r\n                onChange={(event) => {\r\n                  setPdf(event.target.files[0]);\r\n                }}\r\n              />\r\n            </Button>\r\n          ) : (\r\n            <Typography sx={{ color: \"#E14D2A\", mb: \"1em\" }}>\r\n              {pdf.name}\r\n            </Typography>\r\n          )}\r\n          <Stack direction=\"row\" sx={{ justifyContent: \"space-between\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              sx={{ backgroundColor: \"#E14D2A\" }}\r\n              onClick={() => {\r\n                uploadNote();\r\n              }}\r\n            >\r\n              Create Notes\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              sx={{ backgroundColor: \"lightgrey\" }}\r\n              onClick={() => {\r\n                setPdf(null);\r\n                setNewNote({\r\n                  name: \"\",\r\n                  course: \"\",\r\n                  university: \"\",\r\n                  career: \"\",\r\n                  path: \"\",\r\n                });\r\n                setNoteEditor(false);\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Stack>\r\n        </>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default MyNotes;\r\n","import { Button, Card, CardContent, Grid, Paper, Typography } from '@mui/material';\r\nimport { child, get, getDatabase, ref } from 'firebase/database';\r\nimport { getDownloadURL, getStorage, ref as refStorage } from 'firebase/storage';\r\nimport React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nconst SearchNotes = () => {\r\n\r\n  const [notes, setNotes] = useState([])\r\n\r\n  const isMobile = useMediaQuery({ query: \"(max-width: 900px)\" });\r\n\r\n  useEffect(() => {\r\n    const getNotes = async () => {\r\n      const dbRef = ref(getDatabase());\r\n      get(child(dbRef, `notes`))\r\n        .then((snapshot) => {\r\n          if (snapshot.exists()) {\r\n            const response = snapshot.val();\r\n            console.log(Object.values(response));\r\n            setNotes(Object.values(response));\r\n          } else {\r\n            console.log(\"No data available\");\r\n            setNotes([]);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    };\r\n\r\n    getNotes();\r\n  }, []);\r\n\r\n  const openNotes = (paths) => {\r\n    const storage = getStorage();\r\n    var windowReference = window.open();\r\n\r\n    getDownloadURL(refStorage(storage, \"notes/\" + paths))\r\n      .then((url) => {\r\n        // `url` is the download URL for 'images/stars.jpg'\r\n\r\n        windowReference.location = url;\r\n      })\r\n      .catch((error) => {\r\n        // Handle any errors\r\n        console.log(error);\r\n      });\r\n  };\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        width: \"100%\",\r\n        padding: isMobile ? \"1em\" : \"2em 1em\",\r\n        borderRadius: \"15px\",\r\n        mt: \"5.5em\",\r\n      }}\r\n    >\r\n      <Typography\r\n        variant={isMobile ? \"h5\" : \"h4\"}\r\n        sx={{ fontFamily: \"Montserrat Bold\", mb: \"1em\" }}\r\n      >\r\n        {\"Notes\"}\r\n      </Typography>\r\n\r\n        <>\r\n          \r\n          <Grid container width=\"100%\" justifyContent=\"center\">\r\n            {notes.map((note, index) => {\r\n              return (\r\n                <Grid\r\n                  key={index}\r\n                  item\r\n                  xs={12}\r\n                  sm={6}\r\n                  md={4}\r\n                  sx={{\r\n                    minWidth: \"300px\",\r\n                    heigth: \"235px\",\r\n                    ml: !isMobile ? \" 0.5em\" : 0,\r\n                  }}\r\n                >\r\n                  <Card\r\n                    sx={{\r\n                      margin: \"1em\",\r\n                      borderRadius: \"1em\",\r\n                      background: \"white\",\r\n                      border: \"solid #E14D2A\",\r\n                      minWidth: \"300px\",\r\n                      minHeight: \"235px\",\r\n                      p: \"0 0.5em\",\r\n                    }}\r\n                  >\r\n                    <CardContent>\r\n                      <Typography noWrap variant=\"h7\" sx={{ mb: \"0.5em\" }}>\r\n                        <strong>{note.name}</strong>\r\n                      </Typography>\r\n                      <Typography>University: {note.university}</Typography>\r\n                      <Typography>Career: {note.career}</Typography>\r\n                      <Typography>Course: {note.course}</Typography>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        sx={{ backgroundColor: \"#E14D2A\", m: \"1.3em 0 0 0\" }}\r\n                        onClick={() => {\r\n                          openNotes(note.path);\r\n                        }}\r\n                      >\r\n                        View Notes\r\n                      </Button>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </>\r\n        </Paper>\r\n  )\r\n}\r\n\r\nexport default SearchNotes","export default __webpack_public_path__ + \"static/media/logo.7462b415.png\";","import {\r\n  AppBar,\r\n  ButtonBase,\r\n  CssBaseline,\r\n  Drawer,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Stack,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { AccountCircle, Logout, Person, Search, Folder } from \"@mui/icons-material\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport Login from \"./Login\";\r\nimport Profile from \"./Profile\";\r\nimport MyNotes from \"./MyNotes\";\r\nimport SearchNotes from \"./SearchNotes\";\r\nimport logo from './images/logo.png'\r\n\r\nconst Dashboard = ({ userInfo, triggerSessionValidation }) => {\r\n  let drawerWidth = 240;\r\n  const isMobile = useMediaQuery({ query: \"(max-width: 900px)\" });\r\n  //drawerWidth = isMobile ? 60 : 240;\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n  const [selection, setSelection] = useState(0);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const handleMenuItemSelected = (itemIndex) => {\r\n    setMobileOpen(false);\r\n    setSelection(itemIndex);\r\n  };\r\n\r\n  const selectDashboardTab = () => {\r\n    switch (selection) {\r\n      case 0:\r\n        return <Profile userInfo={userInfo} />;\r\n      case 1:\r\n        return <SearchNotes />\r\n      case 2: \r\n        return <MyNotes userInfo={userInfo}/>;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    window.localStorage.setItem(\"user-info\", null);\r\n    triggerSessionValidation();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n      }}\r\n    >\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        sx={{\r\n          zIndex: (theme) => theme.zIndex.drawer + 1,\r\n          backgroundColor: \"#E14D2A\",\r\n          paddingTop:'0.5em'\r\n        }}\r\n      >\r\n        <Toolbar sx={{ justifyContent: \"space-between\" }}>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            sx={{ mr: 2, display: { md: \"none\" } }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <div color=\"inherit\" >\r\n            <img\r\n              src={logo}\r\n              alt=\"Logo Fastudy\"\r\n              width=\"180\"\r\n              height=\"auto\"\r\n              style={{borderRadius:'10px'}}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant={isMobile ? \"temporary\" : \"permanent\"}\r\n        open={mobileOpen}\r\n        onClose={handleDrawerToggle}\r\n        ModalProps={{\r\n          keepMounted: true, // Better open performance on mobile.\r\n        }}\r\n        sx={{\r\n          \"& .MuiDrawer-paper\": {\r\n            boxSizing: \"border-box\",\r\n            width: drawerWidth,\r\n          },\r\n          width: drawerWidth,\r\n          flexShrink: 0,\r\n        }}\r\n      >\r\n        <div style={{ height: \"110px\" }} />\r\n\r\n        <List sx={{ paddingBottom: \"200px\" }}>\r\n          <ListItem\r\n            button\r\n            selected={selection === 0}\r\n            onClick={() => handleMenuItemSelected(0)}\r\n            id=\"usersButton\"\r\n            sx={selection === 0 ? {color: '#E14D2A',\r\n              '& .MuiListItemIcon-root': {\r\n                color: '#E14D2A',\r\n              }} : ''}\r\n          >\r\n            <ListItemIcon>\r\n              <Person />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Profile\" />\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            selected={selection === 1}\r\n            onClick={() => handleMenuItemSelected(1)}\r\n            id=\"usersButton\"\r\n            sx={selection === 1 ? {color: '#E14D2A',\r\n              '& .MuiListItemIcon-root': {\r\n                color: '#E14D2A',\r\n              }} : ''}\r\n          >\r\n            <ListItemIcon>\r\n              <Search />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Search Notes\" />\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            selected={selection === 2}\r\n            onClick={() => handleMenuItemSelected(2)}\r\n            id=\"usersButton\"\r\n            sx={selection === 2 ? {color: '#E14D2A',\r\n              '& .MuiListItemIcon-root': {\r\n                color: '#E14D2A',\r\n              }} : ''}\r\n          >\r\n            <ListItemIcon>\r\n              <Folder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"My Notes\" />\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            onClick={() => logout()}\r\n            id=\"usersButton\"\r\n            \r\n          >\r\n            <ListItemIcon>\r\n              <Logout />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Logout\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      {selectDashboardTab()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { Redirect, Route } from 'react-router-dom';\r\nimport React from 'react';\r\nimport Login from './Login'\r\nimport Dashboard from './Dashboard'\r\n\r\nconst Routing = ({ userInfo, triggerSessionValidation }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Route\r\n        exact\r\n        path=\"/\"\r\n        render={() =>\r\n          userInfo ? <Redirect to=\"/fastudy\" /> : <Login triggerSessionValidation={triggerSessionValidation} userInfo={userInfo} />\r\n        }\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/fastudy\"\r\n        render={() =>\r\n          userInfo ? (\r\n          \r\n            <Dashboard  userInfo={userInfo} triggerSessionValidation={triggerSessionValidation} />\r\n          ) : (\r\n            <Redirect to=\"/\" />\r\n          )\r\n        }\r\n      />\r\n      \r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Routing;\r\n","import \"./App.css\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Routing from \"./components/Routing\";\nimport React, { useEffect, useState } from \"react\";\n  // Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n  // TODO: Add SDKs for Firebase products that you want to use\n  // https://firebase.google.com/docs/web/setup#available-libraries\n  \nfunction App(props) {\n  const [userInfo, setUserInfo] = useState();\n  const [authEvent, setAuthEvent] = useState(false);\n\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDe5ohJkj9mZeP2lgkvGHRAjr0j2KdlsS4\",\n  authDomain: \"fastudy-c3bad.firebaseapp.com\",\n  projectId: \"fastudy-c3bad\",\n  storageBucket: \"fastudy-c3bad.appspot.com\",\n  messagingSenderId: \"840946595141\",\n  appId: \"1:840946595141:web:47f91f2d8f9a69cd687a2c\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n  const getUserInfo = async () => {\n    try {\n      const user = JSON.parse(window.localStorage.getItem(\"user-info\"));\n      //console.log(authUser.signInUserSession.idToken.jwtToken);\n      setUserInfo(user);\n    } catch (err) {\n      console.log(err);\n      setUserInfo(null);\n    }\n  };\n\n  const triggerSessionValidation = () => {\n    setAuthEvent((previous) => !previous);\n  };\n\n  useEffect(() => {\n    try {\n      getUserInfo();\n    } catch (err) {\n      console.log(err);\n      setUserInfo(null);\n    }\n  }, [authEvent]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <BrowserRouter>\n          <Routing userInfo={userInfo} triggerSessionValidation={triggerSessionValidation} />\n        </BrowserRouter>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}